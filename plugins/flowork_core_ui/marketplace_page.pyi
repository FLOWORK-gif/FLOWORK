# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from flowork_kernel.api_client import ApiClient
from flowork_kernel.utils.performance_logger import log_performance
from tkinter import filedialog, messagebox
from typing import Any
from typing_extensions import Self
from upload_dialog import UploadDialog
import json
import os
import requests
import tempfile
import threading
import ttkbootstrap
import webbrowser

class MarketplacePage:
    def __init__(self: Self, parent_notebook: Any, kernel_instance: Any) -> None: ...
    def _build_ui(self: Self) -> Any: ...
    def refresh_content(self: Self, event_data: Any) -> Any: ...
    def _fetch_all_data_and_refresh(self: Self) -> Any: ...
    def _create_component_notebook(self: Self, parent_tab: Any, tree_dict: Any) -> Any: ...
    def _populate_ads_panel(self: Self, success: Any, ads_data: Any) -> Any: ...
    def _get_current_tab_info(self: Self) -> Any: ...
    def _fetch_all_data_worker(self: Self) -> Any: ...
    def _refresh_all_lists(self: Self) -> Any: ...
    def _refresh_list(self: Self, component_type: Any, tree: Any, data_cache: Any, is_local_tab: Any) -> Any: ...
    def _on_search(self: Self) -> Any: ...
    def _on_tab_change(self: Self, event: Any) -> Any: ...
    def _update_button_state(self: Self, event: Any) -> Any: ...
    def _upload_selected_component(self: Self) -> Any: ...
    def _upload_model_worker(self: Self, model_path: Any, upload_details: Any) -> Any: ...
    def _upload_worker(self: Self, comp_type: Any, component_id: Any, upload_details: Any) -> Any: ...
    def _toggle_selected_component(self: Self) -> Any: ...
    def _uninstall_selected_component(self: Self) -> Any: ...
    def _install_component(self: Self) -> Any: ...
    def _download_and_install_model_worker(self: Self, model_data: Any) -> Any: ...
    def _download_and_install_preset_worker(self: Self, preset_data: Any) -> Any: ...
    def _download_and_install_worker(self: Self, comp_type: Any, component_data: Any) -> Any: ...
    def _on_install_complete(self: Self, success: Any, response: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import ttkbootstrap
import tkinter
import tkinter.messagebox
import tkinter.filedialog
import flowork_kernel
import flowork_kernel.api_client
import os
import threading
import flowork_kernel.utils
import flowork_kernel.utils.performance_logger
import json
import webbrowser
import requests
import tempfile
import ntpath