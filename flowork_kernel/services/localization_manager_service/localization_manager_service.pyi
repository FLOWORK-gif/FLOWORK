# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from typing import Any
from typing_extensions import Self
import json
import os

class LocalizationManagerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def get_available_languages_display(self: Self) -> Any: ...
    def get_current_language_code(self: Self) -> Any: ...
    def load_base_languages(self: Self) -> Any: ...
    def load_all_languages(self: Self) -> Any: ...
    def set_language(self: Self, lang_id: Any) -> Any: ...
    def get(self: Self, key: Any) -> Any: ...
    def _load_settings(self: Self) -> Any: ...
    def _save_settings(self: Self, settings_to_save: Any) -> Any: ...
    def save_setting(self: Self, key: Any, value: Any) -> Any: ...
    def get_setting(self: Self, key: Any, default: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import json
import ntpath