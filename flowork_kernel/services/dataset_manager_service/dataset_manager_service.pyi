# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from typing import Any
from typing_extensions import Self
import json
import os
import threading

class DatasetManagerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def _read_db(self: Self) -> Any: ...
    def _write_db(self: Self, data: Any) -> Any: ...
    def list_datasets(self: Self) -> Any: ...
    def get_dataset_data(self: Self, dataset_name: str) -> Any: ...
    def create_dataset(self: Self, name: str) -> Any: ...
    def add_data_to_dataset(self: Self, dataset_name: str, data_list: list) -> Any: ...
    def delete_dataset(self: Self, name: str) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import threading
import json
import ntpath