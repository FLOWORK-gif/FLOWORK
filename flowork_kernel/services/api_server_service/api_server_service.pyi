# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from flowork_kernel.exceptions import PermissionDeniedError
from routes.base_api_route import BaseApiRoute
from typing import Any
from typing_extensions import Self
from urllib.parse import unquote, urlparse
import cgi
import http.server
import importlib
import inspect
import json
import os
import re
import socketserver
import threading
import time
import uuid

class ApiRequestHandler:
    def _authenticate_request(self: Self) -> Any: ...
    def _get_json_body(self: Self) -> Any: ...
    def _send_response(self: Self, status_code: Any, response_data: Any) -> Any: ...
    def _handle_request(self: Self, method: Any) -> Any: ...
    def _match_route(self: Self, route_pattern: Any, request_path: Any) -> Any: ...
    def do_GET(self: Self) -> Any: ...
    def do_POST(self: Self) -> Any: ...
    def do_PUT(self: Self) -> Any: ...
    def do_PATCH(self: Self) -> Any: ...
    def do_DELETE(self: Self) -> Any: ...
    def log_message(self: Self, format: Any) -> Any: ...

class ApiServerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def start(self: Self) -> Any: ...
    def _safe_get_service(self: Self, service_id: Any) -> Any: ...
    def _load_dependencies(self: Self) -> Any: ...
    def _load_api_routes(self: Self) -> Any: ...
    def _load_protected_component_ids(self: Self) -> Any: ...
    def run(self: Self) -> Any: ...
    def stop(self: Self) -> Any: ...
    def trigger_workflow_by_api(self: Self, preset_name: str, initial_payload: dict) -> str | None: ...
    def trigger_scan_by_api(self: Self, scanner_id: str) -> str | None: ...
    def _run_scan_worker(self: Self, job_id: Any, diagnostics_plugin: Any, scanner_id: str) -> Any: ...
    def update_job_status(self: Self, job_id: str, status_data: dict) -> Any: ...
    def get_job_status(self: Self, job_id: str) -> dict | None: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import http
import http.server
import socketserver
import threading
import json
import uuid
import time
import os
import re
import importlib
import inspect
import urllib
import urllib.parse
import cgi
import flowork_kernel
import flowork_kernel.exceptions
import ntpath