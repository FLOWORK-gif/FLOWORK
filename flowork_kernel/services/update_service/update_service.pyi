# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from cryptography.exceptions import InvalidSignature
from cryptography.hazmat.primitives import hashes, serialization
from cryptography.hazmat.primitives.asymmetric import padding
from typing import Any
from typing_extensions import Self
import base64
import hashlib
import json
import os
import requests
import threading

CRYPTO_AVAILABLE = True
CRYPTO_AVAILABLE = False
class UpdateService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def _load_public_key(self: Self) -> Any: ...
    def _calculate_local_sha256(self: Self, file_path: Any) -> Any: ...
    def _get_verified_remote_fingerprints(self: Self) -> Any: ...
    def _download_file(self: Self, relative_path: Any) -> Any: ...
    def run_update_check(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import json
import hashlib
import requests
import threading
import base64
import cryptography
import cryptography.hazmat
import cryptography.hazmat.primitives
import cryptography.hazmat.primitives.hashes
import cryptography.hazmat.primitives.serialization
import cryptography.hazmat.primitives.asymmetric
import cryptography.hazmat.primitives.asymmetric.padding
import cryptography.exceptions
import ntpath