# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from flowork_kernel.api_contract import BaseModule, BaseUIProvider
from flowork_kernel.exceptions import PermissionDeniedError
from importlib.machinery import ExtensionFileLoader
from typing import Any
from typing_extensions import Self
from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer
import hashlib
import importlib.metadata
import importlib.util
import json
import os
import shutil
import subprocess
import sys
import tempfile
import threading
import traceback
import zipfile

class ComponentInstallHandler(FileSystemEventHandler):
    def __init__(self: Self, service_instance: Any) -> None: ...
    def on_created(self: Self, event: Any) -> Any: ...

class ModuleManagerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def start(self: Self) -> Any: ...
    def stop(self: Self) -> Any: ...
    def register_approval_callback(self: Self, module_id: Any, callback: Any) -> Any: ...
    def notify_approval_response(self: Self, module_id: str, result: str) -> Any: ...
    def discover_and_load_modules(self: Self) -> Any: ...
    def _calculate_requirements_hash(self: Self, file_path: Any) -> Any: ...
    def _install_dependencies_locally(self: Self, component_path: Any, component_name: Any) -> Any: ...
    def get_instance(self: Self, module_id: Any) -> Any: ...
    def _load_paused_status(self: Self) -> Any: ...
    def _save_paused_status(self: Self) -> Any: ...
    def set_module_paused(self: Self, module_id: Any, is_paused: Any) -> Any: ...
    def get_manifest(self: Self, module_id: Any) -> Any: ...
    def get_module_permissions(self: Self, module_id: Any) -> Any: ...
    def get_module_tier(self: Self, module_id: Any) -> Any: ...
    def install_component(self: Self, zip_filepath: str) -> (bool, str): ...
    def uninstall_component(self: Self, component_id: str) -> (bool, str): ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import json
import importlib
import importlib.util
import subprocess
import sys
import traceback
import flowork_kernel
import flowork_kernel.api_contract
import importlib.metadata
import importlib.machinery
import threading
import zipfile
import tempfile
import shutil
import watchdog
import watchdog.observers
import watchdog.observers.Observer
import watchdog.events
import flowork_kernel.exceptions
import hashlib
import ntpath