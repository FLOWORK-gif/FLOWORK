# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from typing import Any
from typing_extensions import Self
import os
import subprocess
import sys
import threading
import uuid

class ModelConverterService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def _check_dependencies(self: Self) -> Any: ...
    def start_requantize_job(self: Self, source_gguf_path: str, output_gguf_name: str, quantize_method: str) -> Any: ...
    def start_conversion_job(self: Self, source_model_folder: str, output_gguf_name: str, quantize_method: str) -> Any: ...
    def get_job_status(self: Self, job_id: str) -> Any: ...
    def _log_job_update(self: Self, job_id: Any, message: Any, level: Any) -> Any: ...
    def _run_subprocess(self: Self, job_id: Any, command: Any) -> Any: ...
    def _requantize_worker(self: Self, job_id: Any, source_gguf_path: Any, output_gguf_name: Any, quantize_method: Any) -> Any: ...
    def _conversion_worker(self: Self, job_id: Any, source_model_folder: Any, output_gguf_name: Any, quantize_method: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import threading
import uuid
import subprocess
import sys
import ntpath