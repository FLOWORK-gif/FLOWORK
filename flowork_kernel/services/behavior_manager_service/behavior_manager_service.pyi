# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from behavior_handlers import LoopHandler, RetryHandler
from typing import Any
from typing_extensions import Self

class BehaviorManagerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def wrap_execution(self: Self, module_id: Any, original_execute_func: Any) -> Any: ...


__name__ = ...



# No other modules used internally, no implicit dependencies.
