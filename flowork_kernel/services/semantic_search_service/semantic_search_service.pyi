# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from sentence_transformers import SentenceTransformer
from sentence_transformers.util import cos_sim
from typing import Any
from typing_extensions import Self
import json
import os
import threading
import time
import torch

SENTENCE_TRANSFORMERS_AVAILABLE = True
SENTENCE_TRANSFORMERS_AVAILABLE = False
class SemanticSearchService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def start(self: Self) -> Any: ...
    def _initialize_model(self: Self) -> Any: ...
    def build_index(self: Self, event_data: Any) -> Any: ...
    def search(self: Self, query: str, component_type: str, top_k: int) -> list[str]: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import threading
import os
import json
import time
import sentence_transformers
import sentence_transformers.SentenceTransformer
import sentence_transformers.util
import torch