# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from base_service import BaseService
from diffusers import AutoencoderKL, StableDiffusionXLPipeline
from flowork_kernel.utils.file_helper import sanitize_filename
from typing import Any
from typing_extensions import Self
import hashlib
import importlib.metadata
import importlib.util
import json
import os
import shutil
import subprocess
import sys
import tempfile
import time
import torch
import traceback
import zipfile

DIFFUSERS_AVAILABLE = True
DIFFUSERS_AVAILABLE = False
LLAMA_CPP_AVAILABLE = True
LLAMA_CPP_AVAILABLE = False
class AIProviderManagerService(BaseService):
    def __init__(self: Self, kernel: Any, service_id: str) -> None: ...
    def start(self: Self) -> Any: ...
    def query_ai_by_task(self: Self, task_type: str, prompt: str, endpoint_id: str) -> dict: ...
    def _run_single_file_image_model(self: Self, model_info: Any, prompt: Any) -> Any: ...
    def _calculate_requirements_hash(self: Self, file_path: Any) -> Any: ...
    def _install_dependencies(self: Self, provider_dir: Any, provider_name: Any) -> Any: ...
    def discover_and_load_endpoints(self: Self) -> Any: ...
    def get_provider(self: Self, provider_id: str) -> Any: ...
    def get_available_providers(self: Self) -> dict: ...
    def get_default_provider(self: Self) -> Any: ...
    def install_component(self: Self, zip_filepath: str) -> (bool, str): ...
    def _find_component_path(self: Self, component_id: str) -> str | None: ...
    def uninstall_component(self: Self, component_id: str) -> (bool, str): ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import json
import importlib
import importlib.util
import subprocess
import sys
import importlib.metadata
import tempfile
import zipfile
import shutil
import traceback
import time
import hashlib
import flowork_kernel
import flowork_kernel.utils
import flowork_kernel.utils.file_helper
import torch
import diffusers
import diffusers.StableDiffusionXLPipeline
import diffusers.AutoencoderKL
import ntpath