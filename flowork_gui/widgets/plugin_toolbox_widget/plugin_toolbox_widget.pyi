# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from flowork_kernel.api_client import ApiClient
from flowork_kernel.api_contract import BaseDashboardWidget
from flowork_kernel.core import build_security
from flowork_kernel.ui_shell.custom_widgets.tooltip import ToolTip
from flowork_kernel.utils.performance_logger import log_performance
from tkinter import StringVar, messagebox, ttk
from typing import Any
from typing_extensions import Self
import threading
import time
import ttkbootstrap

class PluginToolboxWidget(BaseDashboardWidget):
    def __init__(self: Self, parent: Any, coordinator_tab: Any, kernel: Any, widget_id: str) -> None: ...
    def on_widget_load(self: Self) -> Any: ...
    def _create_widgets(self: Self) -> Any: ...
    def _on_search(self: Self) -> Any: ...
    def _force_reload_and_refresh(self: Self) -> Any: ...
    def _load_data_worker(self: Self, force_reload: bool) -> Any: ...
    def populate_plugin_panel(self: Self, success: Any, all_components_data: Any) -> Any: ...
    def on_drag_start(self: Self, event: Any) -> Any: ...
    def refresh_content(self: Self, event_data: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import flowork_kernel
import flowork_kernel.core
import flowork_kernel.core.build_security
import ttkbootstrap
import tkinter
import tkinter.ttk
import tkinter.StringVar
import tkinter.messagebox
import flowork_kernel.api_contract
import flowork_kernel.ui_shell
import flowork_kernel.ui_shell.custom_widgets
import flowork_kernel.ui_shell.custom_widgets.tooltip
import flowork_kernel.api_client
import flowork_kernel.utils
import flowork_kernel.utils.performance_logger
import threading
import time