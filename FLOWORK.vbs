' Auto-generated by Flowork Installer
' MODIFIED: To run within the Poetry environment for proper dependency management.
' MODIFIED AGAIN: To add a first-run check for a lock file (AO.LA).

Set WshShell = CreateObject("WScript.Shell")
scriptPath = WScript.ScriptFullName

Set fso = CreateObject("Scripting.FileSystemObject")
scriptDir = fso.GetParentFolderName(scriptPath)

' --- Define key file names ---
Dim lockFileName, debugScriptName
lockFileName = "teetah.art"
debugScriptName = "DEBUG.bat"

' --- Build full paths ---
Dim lockFilePath, debugScriptPath
lockFilePath = fso.BuildPath(scriptDir, lockFileName)
debugScriptPath = fso.BuildPath(scriptDir, debugScriptName)


' --- Smart Launch Logic ---
' Check if the lock file exists to determine if this is the first run.

If fso.FileExists(lockFilePath) Then
    ' --- NORMAL EXECUTION PATH ---
    ' NOTE: The AO.LA file exists, so we proceed with the standard silent launch.
    
    ' --- OLD COMMAND (COMMENTED OUT FOR ARCHIVAL) ---
    ' python_exe = chr(34) & scriptDir & "\python\pythonw.exe" & chr(34)
    ' script_to_run = chr(34) & scriptDir & "\pre_launcher.py" & chr(34)
    ' command = python_exe & " " & script_to_run

    ' --- NEW COMMAND ---
    ' NOTE: We are now using 'poetry run' to execute the script within its virtual environment.
    ' 'cmd.exe /c' is used to execute the command in the command prompt.
    ' The command itself is "cd /d 'script_directory' && poetry run pythonw pre_launcher.py"
    ' This ensures we are in the correct directory before running poetry.
    ' 'pythonw.exe' is used to keep the execution windowless (silent).
    Dim command_normal
    command_normal = "cmd.exe /c ""cd /d " & chr(34) & scriptDir & chr(34) & " && poetry run pythonw pre_launcher.py"""

    ' NOTE: The '0' hides the window, 'False' to ensure it runs in the background.
    WshShell.Run command_normal, 0, False
    
Else
    ' --- FIRST RUN / DEBUG PATH ---
    ' NOTE: The AO.LA file does not exist. We will run the debug/setup script first.
    
    Dim command_debug
    command_debug = chr(34) & debugScriptPath & chr(34)
    
    ' NOTE: We run the debug script visibly and wait for it to complete.
    ' The '1' shows the window, 'True' forces the script to wait for it to finish.
    WshShell.Run command_debug, 1, True
    
    ' NOTE: After the debug script is done, create the empty lock file
    ' to ensure normal execution on the next run.
    Dim lockFile
    Set lockFile = fso.CreateTextFile(lockFilePath, True)
    lockFile.Close
    Set lockFile = Nothing

End If


' Clean up objects
Set fso = Nothing
Set WshShell = Nothing