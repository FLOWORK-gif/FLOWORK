# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from flowork_kernel.api_contract import BaseTriggerListener
from typing import Any
from typing_extensions import Self
from watchdog.events import FileCreatedEvent, FileDeletedEvent, FileModifiedEvent, FileMovedEvent, FileSystemEventHandler
from watchdog.observers import Observer
import os
import threading
import time

class _InternalEventHandler(FileSystemEventHandler):
    def __init__(self: Self, listener_instance: Any) -> None: ...
    def on_any_event(self: Self, event: Any) -> Any: ...

class FileSystemListener(BaseTriggerListener):
    def __init__(self: Self, trigger_id: str, config: dict, services: dict) -> None: ...
    def start(self: Self) -> Any: ...
    def _run_observer(self: Self) -> Any: ...
    def stop(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import time
import os
import threading
import watchdog
import watchdog.observers
import watchdog.observers.Observer
import watchdog.events
import flowork_kernel
import flowork_kernel.api_contract